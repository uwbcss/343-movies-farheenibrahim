Thu Jun  5 14:31:42 PDT 2025
Linux FarheensLaptop 5.15.167.4-microsoft-standard-WSL2 #1 SMP Tue Nov 5 00:21:55 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
uid=1000(farheen) gid=1000(farheen) groups=1000(farheen),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),100(users),107(netdev),1001(docker)
=====================================================
1. If the section below is empty, the program compiles 
   without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. If the section below is empty or has the expected output 
    the program puns and produces correct output
=====================================================
Start testStore1
End testStore1
Start testStore2
End testStore2
=====================================
Begin testStoreFinal
Loading customers...
Customers loaded.
Customers loaded.
Unknown movie type: Z, discarding line:  10, Hal Ashby, Harold and Maude, Bud Cort 3 1971
Unknown movie type: Z, discarding line:  10, Frank Capra, It's a Wonderful Life, James Steward 11 1946
Movies loaded.
Movies loaded.
ERROR: Malformed command line: "I"
Failed to execute command: I
==========================
History for 1000 Minnie Mouse:
No history for Mouse Minnie
==========================
History for 5000 Freddie Frog:
No history for Frog Freddie
==========================
History for 8000 Wally Wacky:
No history for Wacky Wally
ERROR: Unknown genre type: F
ERROR: Unknown genre type: F
ERROR: Unknown genre type: F
ERROR: Unknown genre type: Z
ERROR: Unknown genre type: F
ERROR: Unknown genre type: F
ERROR: Unknown genre type: F
ERROR: Malformed command line: "X"
Failed to execute command: X
ERROR: Unknown command type: Z
Failed to execute command: Z 1000 D C 10 1941 Humphrey Bogart
ERROR: Unknown genre type: F
ERROR: Unknown genre type: F
Borrow failed: Invalid customer ID 1234
ERROR: Unknown genre type: F
ERROR: Unsupported media type: Z
Borrow failed: Movie not available or not found.
Borrow failed: Movie not available or not found.
Borrow failed: Movie not available or not found.
Borrow failed: Movie not available or not found.
ERROR: Malformed command line: "I"
Failed to execute command: I
==========================
History for 1000 Minnie Mouse:
Borrow command for customer 1000
Barry Levinson, Good Morning Vietnam, 0 (1) - Drama
Borrow command for customer 1000
1940 5, Katherine Hepburn, ,  (1) - Classics
Borrow command for customer 1000
Gus Van Sant, Good Will Hunting, 0 (1) - Drama
Borrow command for customer 1000
1940 5, Cary Grant, ,  (1) - Classics
Borrow command for customer 1000
1971 3, Ruth Gordon, ,  (1) - Classics
==========================
History for 1111 Mickey Mouse:
Borrow command for customer 1111
1971 2, Malcolm McDowell, ,  (1) - Classics
Borrow command for customer 1111
1971 3, Ruth Gordon, ,  (1) - Classics
Borrow command for customer 1111
1941 10, Humphrey Bogart, ,  (1) - Classics
Borrow command for customer 1111
1938 9, Cary Grant, ,  (1) - Classics
==========================
History for 5000 Freddie Frog:
Borrow command for customer 5000
1971 3, Ruth Gordon, ,  (1) - Classics
Return command for customer 5000
1971 3, Ruth Gordon, ,  (1) - Classics
Borrow command for customer 5000
1971 3, Ruth Gordon, ,  (1) - Classics
Return command for customer 5000
1971 3, Ruth Gordon, ,  (1) - Classics
Borrow command for customer 5000
1971 3, Ruth Gordon, ,  (1) - Classics
Return command for customer 5000
1971 3, Ruth Gordon, ,  (1) - Classics
Borrow command for customer 5000
1971 3, Ruth Gordon, ,  (1) - Classics
==========================
History for 8000 Wally Wacky:
Borrow command for customer 8000
1971 3, Ruth Gordon, ,  (1) - Classics
Borrow command for customer 8000
1971 3, Ruth Gordon, ,  (1) - Classics
==========================
History for 8888 Porky Pig:
Borrow command for customer 8888
Jonathan Demme, Silence of the Lambs, 0 (1) - Drama
Borrow command for customer 8888
Nancy Savoca, Dogfight, 0 (1) - Drama
Borrow command for customer 8888
1971 3, Ruth Gordon, ,  (1) - Classics
Commands processed.
=====================================
Done.
=====================================================
3. If the section below is empty, then there are no clang-tidy warnings 
   (ignore warnings from system headers, such as "13554 warnings generated.")
=====================================================
[1/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/borrow.cpp.
21736 warnings generated.
[2/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/classic.cpp.
43467 warnings generated.
[3/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/comedy.cpp.
65204 warnings generated.
[4/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/command.cpp.
65204 warnings generated.
[5/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/command_factory.cpp.
86979 warnings generated.
[6/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/customer.cpp.
102314 warnings generated.
[7/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/drama.cpp.
124045 warnings generated.
[8/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/history.cpp.
145782 warnings generated.
[9/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/inventory.cpp.
167246 warnings generated.
[10/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/main.cpp.
185415 warnings generated.
[11/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/movie.cpp.
199260 warnings generated.
[12/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/movie_factory.cpp.
221034 warnings generated.
[13/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/movie_hashtable.cpp.
236370 warnings generated.
[14/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/return.cpp.
258106 warnings generated.
[15/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/store_manager.cpp.
280620 warnings generated.
[16/16] Processing file /home/farheen/CSS343/Movies Project/343-movies-farheenibrahim/store_test.cpp.
301396 warnings generated.
Suppressed 301396 warnings (301396 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. If the section below is empty, clang-format does not find any formatting issues
   You can fix formatting errors using "clang-format -i <filename>" on command line
=====================================================
Running clang-format on ./borrow.cpp
Running clang-format on ./classic.cpp
Running clang-format on ./comedy.cpp
Running clang-format on ./command.cpp
Running clang-format on ./command_factory.cpp
Running clang-format on ./customer.cpp
Running clang-format on ./drama.cpp
17c17,18
< // Returns true if the other movie is also Drama and has the same director and title
---
> // Returns true if the other movie is also Drama and has the same director and
> // title
Running clang-format on ./history.cpp
Running clang-format on ./inventory.cpp
Running clang-format on ./main.cpp
Running clang-format on ./movie.cpp
Running clang-format on ./movie_factory.cpp
Running clang-format on ./movie_hashtable.cpp
Running clang-format on ./return.cpp
Running clang-format on ./store_manager.cpp
Running clang-format on ./store_test.cpp
47c47,48
<   store.loadCustomers("data4customers.txt");   // Load customer data from the file "data4customers.txt"
---
>   store.loadCustomers("data4customers.txt"); // Load customer data from the file
>                                              // "data4customers.txt"
49c50,51
<   store.loadMovies("data4movies.txt");   // Load movie inventory data from the file "data4movies.txt"
---
>   store.loadMovies("data4movies.txt"); // Load movie inventory data from the
>                                        // file "data4movies.txt"
51c53,55
<   store.processCommands("data4commands.txt");   // Process all commands (borrow, return, inventory, history) from "data4commands.txt"
---
>   store.processCommands(
>       "data4commands.txt"); // Process all commands (borrow, return, inventory,
>                             // history) from "data4commands.txt"
=====================================================
5. If there are any memory leaks, it should be in the output below
=====================================================
=====================================================
6. Using valgrind to check for memory leaks
   Check for "definitely lost" in the output below
=====================================================
==217896== Memcheck, a memory error detector
==217896== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==217896== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==217896== Command: ./a.out
==217896== Parent PID: 217636
==217896== 
==217896== 
==217896== HEAP SUMMARY:
==217896==     in use at exit: 0 bytes in 0 blocks
==217896==   total heap usage: 657 allocs, 657 frees, 156,444 bytes allocated
==217896== 
==217896== All heap blocks were freed -- no leaks are possible
==217896== 
==217896== For lists of detected and suppressed errors, rerun with: -s
==217896== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Thu Jun  5 14:32:29 PDT 2025
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
